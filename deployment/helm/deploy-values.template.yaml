environment: "{{ tf.environment }}"
namespace: "staging"

stac:
  enabled: true
  image:
    repository: "mcr.microsoft.com/planetary-computer-apis/stac"
    tag: "{{ env.IMAGE_TAG }}"
    pullPolicy: Always

  server:
    maxWorkers: "1"
    poolSize: "1"

  deploy:
    replicaCount: {{ tf.stac_replica_count }}
    podAnnotations:
      "pc/gitsha": "{{ env.GIT_COMMIT }}"

  appRootPath: "/stac"
  port: "80"
  debug: "TRUE"

  tiler_href: https://{{ tf.dns_label }}.westeurope.cloudapp.azure.com/data/

dqe:
  enabled: true
  image:
    repository: "mcr.microsoft.com/planetary-computer-apis/tiler"
    tag: "{{ env.IMAGE_TAG }}"
    pullPolicy: Always

  server:
    maxWorkers: "1"
    minDbConnections: "1"
    maxDbConnections: "1"

  tiler:
    workersPerCore: "1"
    webConcurrency: "1"

  deploy:
    replicaCount: {{ tf.tiler_replica_count }}
    podAnnotations:
      "pc/gitsha": "{{ env.GIT_COMMIT }}"

  appRootPath: "/data"
  port: "80"

  stac_api_url: http://planetary-computer-stac.staging.svc.cluster.local
  stac_api_href: https://{{ tf.dns_label }}.westeurope.cloudapp.azure.com/stac/

metrics:
  instrumentationKey: "{{ tf.instrumentation_key }}"

pcingress:
  services:
    mqe:
      path: "/stac(/|$)(.*)"
      name: "planetary-computer-stac"
      port: "80"
    dqe:
      path: "/data(/|$)(.*)"
      name: "planetary-computer-tiler"
      port: "80"

  cert:
    secretName: "pqe-tls-secret"

  certIssuer:
    enabled: true
    privateKeySecretRef: "{{ tf.cluster_cert_issuer }}"
    server: "{{ tf.cluster_cert_server }}"
    issuerEmail: "planetarycomputer@microsoft.com"
    secretName: "pqe-tls-secret"

  ingress:
    enabled: true
    tlsHost: "{{ tf.dns_label }}.{{ tf.location }}.cloudapp.azure.com"
    hosts:
      - "{{ tf.dns_label }}.{{ tf.location }}.cloudapp.azure.com"
    annotations:
      kubernetes.io/ingress.class: nginx
      cert-manager.io/cluster-issuer: "{{ tf.cluster_cert_issuer }}-pcingress"
      nginx.ingress.kubernetes.io/rewrite-target: /$2
      nginx.ingress.kubernetes.io/use-regex: "true"
      nginx.ingress.kubernetes.io/proxy-buffer-size: "16k"
      nginx.ingress.kubernetes.io/proxy-buffers-number: "8"

migrations:
  enabled: false

postgres:
  serverName: "{{ tf.pg_host }}"
  user: "{{ tf.pg_user }}"
  password: "{{ tf.pg_password }}"
  dbName: "{{ tf.pg_database }}"
